memberSearchIndex = [{"p":"view","c":"CommandLine","l":"actions"},{"p":"controller","c":"MapSelectionController","l":"addContinent(HashMap<Integer, Continents>, String, String)","url":"addContinent(java.util.HashMap,java.lang.String,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"addContinentTest()"},{"p":"controller","c":"MapSelectionController","l":"addCountry(HashMap<Integer, Continents>, HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String, String)","url":"addCountry(java.util.HashMap,java.util.HashMap,java.util.HashMap,java.lang.String,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"addCountryTest()"},{"p":"controller","c":"PlayerController","l":"addGameCardsToAttacker(Player, Player, GameMap)","url":"addGameCardsToAttacker(model.Player,model.Player,model.GameMap)"},{"p":"view","c":"CommandLine","l":"addInputCommandList(boolean, String)","url":"addInputCommandList(boolean,java.lang.String)"},{"p":"controller","c":"MapSelectionController","l":"addNeighbour(HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String, String)","url":"addNeighbour(java.util.HashMap,java.util.HashMap,java.lang.String,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"addNeighbourTest()"},{"p":"controller","c":"PlayerSelectionController","l":"addPlayer(ArrayList<String>, String)","url":"addPlayer(java.util.ArrayList,java.lang.String)"},{"p":"test","c":"TestPlayerOperations","l":"addPlayerTest()"},{"p":"view","c":"CommandLine","l":"addToCommands"},{"p":"controller","c":"PlayerController","l":"adjancyList"},{"p":"controller","c":"PlayerController","l":"allOutAttackedPhase(String, String, Player, HashMap<Integer, Countries>, Player, Player)","url":"allOutAttackedPhase(java.lang.String,java.lang.String,model.Player,java.util.HashMap,model.Player,model.Player)"},{"p":"controller","c":"PlayerController","l":"allOutDefend(String, String, Integer, HashMap<Integer, Countries>, Player, Player, Player, String, String)","url":"allOutDefend(java.lang.String,java.lang.String,java.lang.Integer,java.util.HashMap,model.Player,model.Player,model.Player,java.lang.String,java.lang.String)"},{"p":"test","c":"AllTests","l":"AllTests()","url":"%3Cinit%3E()"},{"p":"controller","c":"PlayerController","l":"armiesLeftAfterAttack"},{"p":"test","c":"TestFortification","l":"armyToPlace"},{"p":"controller","c":"PlayerController","l":"assigningCountryToAttacker(HashMap<String, Player>, Player, GameMap)","url":"assigningCountryToAttacker(java.util.HashMap,model.Player,model.GameMap)"},{"p":"controller","c":"PlayerSelectionController","l":"assignRandomCountries(ArrayList<String>, HashMap<Integer, Countries>, HashMap<String, Player>)","url":"assignRandomCountries(java.util.ArrayList,java.util.HashMap,java.util.HashMap)"},{"p":"model","c":"Observable","l":"attach(Observer)","url":"attach(view.Observer)"},{"p":"controller","c":"PlayerController","l":"attackerArmiesMap"},{"p":"controller","c":"PlayerController","l":"attackerArmyLeft"},{"p":"controller","c":"PlayerController","l":"attackerDiceNumbersList"},{"p":"controller","c":"PlayerController","l":"attackPhase(String, String, Integer, Player)","url":"attackPhase(java.lang.String,java.lang.String,java.lang.Integer,model.Player)"},{"p":"test","c":"TestMapOperations","l":"boundries"},{"p":"controller","c":"MapSelectionController","l":"boundriesDetails"},{"p":"controller","c":"MapSelectionController","l":"boundriesStarted"},{"p":"controller","c":"MapSelectionController","l":"boundry"},{"p":"controller","c":"PlayerController","l":"calculateContinentReward(Player, HashMap<Integer, Continents>, HashMap<Integer, Countries>, String)","url":"calculateContinentReward(model.Player,java.util.HashMap,java.util.HashMap,java.lang.String)"},{"p":"controller","c":"PlayerController","l":"calculateOwnedCountryReward(Player)","url":"calculateOwnedCountryReward(model.Player)"},{"p":"controller","c":"PlayerController","l":"calculateReinforceArmy(int, int, int)","url":"calculateReinforceArmy(int,int,int)"},{"p":"view","c":"CardExchangeView","l":"CardExchangeView()","url":"%3Cinit%3E()"},{"p":"controller","c":"PlayerController","l":"cc"},{"p":"test","c":"TestAttack","l":"cc"},{"p":"test","c":"TestReinforcement","l":"cc"},{"p":"view","c":"CommandLine","l":"cc"},{"p":"view","c":"CommandLine","l":"cev"},{"p":"view","c":"CommandLine","l":"checkArmiesPlaced()"},{"p":"view","c":"CommandLine","l":"checkFileExist(String)","url":"checkFileExist(java.lang.String)"},{"p":"controller","c":"PlayerController","l":"checkGameEnd(PlayersList)","url":"checkGameEnd(model.PlayersList)"},{"p":"controller","c":"PlayerController","l":"checkOwnPath(HashMap<Integer, ArrayList<Integer>>, int, int)","url":"checkOwnPath(java.util.HashMap,int,int)"},{"p":"view","c":"CommandLine","l":"checkPlayersTurn(String)","url":"checkPlayersTurn(java.lang.String)"},{"p":"view","c":"CommandLine","l":"commandLine()"},{"p":"view","c":"CommandLine","l":"CommandLine()","url":"%3Cinit%3E()"},{"p":"controller","c":"CommonController","l":"CommonController()","url":"%3Cinit%3E()"},{"p":"controller","c":"PlayerController","l":"comparingDiceToWin(Player, HashMap<String, Integer>, HashMap<String, Integer>, Player, Player, String, String)","url":"comparingDiceToWin(model.Player,java.util.HashMap,java.util.HashMap,model.Player,model.Player,java.lang.String,java.lang.String)"},{"p":"test","c":"TestAttack","l":"con"},{"p":"test","c":"TestFortification","l":"con"},{"p":"test","c":"TestReinforcement","l":"con"},{"p":"controller","c":"PlayerController","l":"conqueredCountriesList"},{"p":"view","c":"CommandLine","l":"cons"},{"p":"util","c":"CONSTANTS","l":"CONSTANTS()","url":"%3Cinit%3E()"},{"p":"test","c":"TestMapOperations","l":"continents"},{"p":"model","c":"Continents","l":"Continents(String, String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"controller","c":"MapSelectionController","l":"continentsDetails"},{"p":"controller","c":"MapSelectionController","l":"continentsStarted"},{"p":"test","c":"TestMapOperations","l":"countries"},{"p":"model","c":"Countries","l":"Countries(String, Integer, String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)"},{"p":"controller","c":"MapSelectionController","l":"countriesDetails"},{"p":"controller","c":"MapSelectionController","l":"countriesStarted"},{"p":"controller","c":"MapSelectionController","l":"country"},{"p":"controller","c":"PlayerController","l":"countryArmyList"},{"p":"controller","c":"PlayerController","l":"countryList"},{"p":"test","c":"TestAttack","l":"countryName"},{"p":"test","c":"TestReinforcement","l":"countryName"},{"p":"controller","c":"MapSelectionController","l":"createEmptyFile(String)","url":"createEmptyFile(java.lang.String)"},{"p":"test","c":"TestReinforcement","l":"currentCardList"},{"p":"controller","c":"PlayerController","l":"defenderArmiesMap"},{"p":"controller","c":"PlayerController","l":"defenderDiceNumbersList"},{"p":"controller","c":"PlayerController","l":"defendingTheBase(Player, PlayersList)","url":"defendingTheBase(model.Player,model.PlayersList)"},{"p":"controller","c":"PlayerController","l":"defendPhaseDiceRoll(String, Integer, Player)","url":"defendPhaseDiceRoll(java.lang.String,java.lang.Integer,model.Player)"},{"p":"model","c":"Observable","l":"detach(Observer)","url":"detach(view.Observer)"},{"p":"controller","c":"PlayerController","l":"diceRolledResult"},{"p":"controller","c":"PlayerController","l":"exchangeCard(int, int, int, ArrayList<String>, Player)","url":"exchangeCard(int,int,int,java.util.ArrayList,model.Player)"},{"p":"test","c":"TestMapOperations","l":"fileLoadTest()"},{"p":"test","c":"TestAttack","l":"fileName"},{"p":"test","c":"TestFortification","l":"fileName"},{"p":"test","c":"TestMapOperations","l":"fileName"},{"p":"test","c":"TestReinforcement","l":"fileName"},{"p":"controller","c":"CommonController","l":"findPlayerNameFromCountry(HashMap<Integer, Countries>, String)","url":"findPlayerNameFromCountry(java.util.HashMap,java.lang.String)"},{"p":"controller","c":"MapSelectionController","l":"flag"},{"p":"test","c":"TestMapOperations","l":"flag"},{"p":"controller","c":"PlayerController","l":"fortify(HashMap<String, Player>, String, String, int, HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>)","url":"fortify(java.util.HashMap,java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap)"},{"p":"test","c":"TestFortification","l":"fromCountry"},{"p":"model","c":"GameMap","l":"GameMap()","url":"%3Cinit%3E()"},{"p":"controller","c":"MapSelectionController","l":"gameMapReading(HashMap<Integer, Continents>, HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String)","url":"gameMapReading(java.util.HashMap,java.util.HashMap,java.util.HashMap,java.lang.String)"},{"p":"model","c":"Player","l":"getActionsPerformed()"},{"p":"model","c":"Player","l":"getAttackerCountry()"},{"p":"model","c":"Player","l":"getAttackerDice()"},{"p":"model","c":"Player","l":"getAttackerName()"},{"p":"model","c":"Player","l":"getAvailableReinforceArmies()"},{"p":"model","c":"GameMap","l":"getBoundries()"},{"p":"model","c":"Player","l":"getCardBonusArmy()"},{"p":"model","c":"Player","l":"getCardReward()"},{"p":"model","c":"Continents","l":"getColour()"},{"p":"model","c":"Player","l":"getConqueredCountries()"},{"p":"controller","c":"CommonController","l":"getContinentByCountryName(HashMap<Integer, Continents>, HashMap<Integer, Countries>, String)","url":"getContinentByCountryName(java.util.HashMap,java.util.HashMap,java.lang.String)"},{"p":"model","c":"Continents","l":"getcontinentControlValue()"},{"p":"model","c":"Continents","l":"getContinentName()"},{"p":"model","c":"GameMap","l":"getContinents()"},{"p":"model","c":"Player","l":"getContinentsCountryList()"},{"p":"controller","c":"CommonController","l":"getContinentsCountryList(HashMap<Integer, Continents>, HashMap<Integer, Countries>)","url":"getContinentsCountryList(java.util.HashMap,java.util.HashMap)"},{"p":"model","c":"GameMap","l":"getCountries()"},{"p":"controller","c":"CommonController","l":"getCountryByName(HashMap<Integer, Countries>, String)","url":"getCountryByName(java.util.HashMap,java.lang.String)"},{"p":"model","c":"Countries","l":"getCountryContinentNum()"},{"p":"model","c":"Countries","l":"getCountryName()"},{"p":"controller","c":"CommonController","l":"getCountryNumberByName(HashMap<Integer, Countries>, String)","url":"getCountryNumberByName(java.util.HashMap,java.lang.String)"},{"p":"model","c":"Player","l":"getCurrentCardList()"},{"p":"model","c":"Player","l":"getCurrentPlayerTurn()"},{"p":"model","c":"Player","l":"getDefenderCountry()"},{"p":"model","c":"Player","l":"getDefenderDice()"},{"p":"model","c":"Player","l":"getDefenderName()"},{"p":"model","c":"Player","l":"getDiceRolled()"},{"p":"model","c":"Player","l":"getGameState()"},{"p":"model","c":"PlayersList","l":"getListOfPlayers()"},{"p":"controller","c":"MapSelectionController","l":"getNeighbours(int)"},{"p":"model","c":"Player","l":"getOwnedArmiesList()"},{"p":"model","c":"Player","l":"getOwnedCountriesArmiesList()"},{"p":"model","c":"Player","l":"getOwnedCountriesList()"},{"p":"model","c":"Countries","l":"getOwnerName()"},{"p":"model","c":"GameMap","l":"getTotalCardsList()"},{"p":"model","c":"Countries","l":"getxCoordinate()"},{"p":"model","c":"Countries","l":"getyCoordinate()"},{"p":"test","c":"TestAttack","l":"gm"},{"p":"test","c":"TestFortification","l":"gm"},{"p":"test","c":"TestReinforcement","l":"gm"},{"p":"view","c":"CommandLine","l":"gm"},{"p":"view","c":"CommandLine","l":"input"},{"p":"view","c":"WelcomeScreen","l":"input"},{"p":"view","c":"CommandLine","l":"inputCommandsList"},{"p":"model","c":"Player","l":"isAllOutPerformed()"},{"p":"controller","c":"MapSelectionController","l":"isConnectedMap(HashMap<Integer, ArrayList<Integer>>)","url":"isConnectedMap(java.util.HashMap)"},{"p":"test","c":"TestMapOperations","l":"isConnectedMapTest()"},{"p":"controller","c":"PlayerController","l":"isvalidAttackMove(int, int, ArrayList<String>, Player, int)","url":"isvalidAttackMove(int,int,java.util.ArrayList,model.Player,int)"},{"p":"controller","c":"PlayerSelectionController","l":"iterateCountriesName(HashMap<Integer, Countries>, String, String)","url":"iterateCountriesName(java.util.HashMap,java.lang.String,java.lang.String)"},{"p":"controller","c":"MapSelectionController","l":"list"},{"p":"test","c":"TestPlayerOperations","l":"listofPlayers"},{"p":"test","c":"TestAttack","l":"listOfPlayers"},{"p":"test","c":"TestFortification","l":"listOfPlayers"},{"p":"test","c":"TestReinforcement","l":"listOfPlayers"},{"p":"main","c":"LoadGame","l":"LoadGame()","url":"%3Cinit%3E()"},{"p":"main","c":"LoadGame","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"controller","c":"MapFormatValidation","l":"MapFormatValidation()","url":"%3Cinit%3E()"},{"p":"controller","c":"MapSelectionController","l":"MapSelectionController()","url":"%3Cinit%3E()"},{"p":"controller","c":"MapSelectionController","l":"mapTraversal(int)"},{"p":"controller","c":"MapSelectionController","l":"mapValidate"},{"p":"controller","c":"PlayerController","l":"marked"},{"p":"test","c":"TestMapOperations","l":"mfv"},{"p":"test","c":"TestReinforcement","l":"modelP"},{"p":"controller","c":"PlayerController","l":"moveArmy(int, HashMap<String, Player>, Player)","url":"moveArmy(int,java.util.HashMap,model.Player)"},{"p":"controller","c":"PlayerController","l":"movingArmyToConqueredCountry(Integer, HashMap<String, Player>, Player, GameMap)","url":"movingArmyToConqueredCountry(java.lang.Integer,java.util.HashMap,model.Player,model.GameMap)"},{"p":"test","c":"TestAttack","l":"msc"},{"p":"test","c":"TestFortification","l":"msc"},{"p":"test","c":"TestMapOperations","l":"msc"},{"p":"test","c":"TestReinforcement","l":"msc"},{"p":"view","c":"CommandLine","l":"msc"},{"p":"util","c":"CONSTANTS","l":"NO_PLAYER_ARMIES"},{"p":"model","c":"Observable","l":"notifyObservers(Observable, Object)","url":"notifyObservers(model.Observable,java.lang.Object)"},{"p":"model","c":"Player","l":"notifyToObserver()"},{"p":"model","c":"PlayersList","l":"notifyToObserver(Player)","url":"notifyToObserver(model.Player)"},{"p":"controller","c":"PlayerController","l":"numOfAttackerArmy"},{"p":"controller","c":"PlayerController","l":"numOfDefenderArmy"},{"p":"model","c":"Observable","l":"Observable()","url":"%3Cinit%3E()"},{"p":"controller","c":"PlayerController","l":"ownedCountriesNumberList"},{"p":"controller","c":"PlayerController","l":"ownedCountriesNumList(HashMap<Integer, Countries>, ArrayList<String>)","url":"ownedCountriesNumList(java.util.HashMap,java.util.ArrayList)"},{"p":"controller","c":"PlayerController","l":"ownedPath"},{"p":"test","c":"TestAttack","l":"p"},{"p":"view","c":"CommandLine","l":"p"},{"p":"view","c":"PhaseView","l":"PhaseView()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"pl"},{"p":"view","c":"CommandLine","l":"pl"},{"p":"controller","c":"PlayerSelectionController","l":"placeAll(HashMap<Integer, Countries>, HashMap<String, Player>, int)","url":"placeAll(java.util.HashMap,java.util.HashMap,int)"},{"p":"controller","c":"PlayerSelectionController","l":"placeArmy(HashMap<Integer, Countries>, HashMap<String, Player>, String, int)","url":"placeArmy(java.util.HashMap,java.util.HashMap,java.lang.String,int)"},{"p":"controller","c":"PlayerController","l":"placeReinforceArmy(String, int, HashMap<Integer, Countries>, HashMap<String, Player>, HashMap<Integer, Continents>, Player)","url":"placeReinforceArmy(java.lang.String,int,java.util.HashMap,java.util.HashMap,java.util.HashMap,model.Player)"},{"p":"test","c":"TestAttack","l":"player"},{"p":"test","c":"TestReinforcement","l":"player"},{"p":"model","c":"Player","l":"Player()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"playerController"},{"p":"test","c":"TestFortification","l":"playerController"},{"p":"test","c":"TestReinforcement","l":"playerController"},{"p":"view","c":"CommandLine","l":"playerController"},{"p":"controller","c":"PlayerController","l":"PlayerController()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"playerDetails"},{"p":"test","c":"TestFortification","l":"playerDetails"},{"p":"test","c":"TestReinforcement","l":"playerDetails"},{"p":"test","c":"TestPlayerOperations","l":"playerName"},{"p":"test","c":"TestFortification","l":"playerOwnedCountries"},{"p":"view","c":"CommandLine","l":"players"},{"p":"controller","c":"PlayerSelectionController","l":"PlayerSelectionController()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"playersList"},{"p":"model","c":"PlayersList","l":"PlayersList()","url":"%3Cinit%3E()"},{"p":"view","c":"PlayerWorldDominationView","l":"PlayerWorldDominationView()","url":"%3Cinit%3E()"},{"p":"test","c":"TestFortification","l":"pOb"},{"p":"test","c":"TestAttack","l":"psc"},{"p":"test","c":"TestFortification","l":"psc"},{"p":"test","c":"TestPlayerOperations","l":"psc"},{"p":"test","c":"TestReinforcement","l":"psc"},{"p":"view","c":"CommandLine","l":"psc"},{"p":"view","c":"CommandLine","l":"pv"},{"p":"view","c":"CommandLine","l":"pwdv"},{"p":"controller","c":"PlayerController","l":"randomNumberGenerator()"},{"p":"controller","c":"PlayerController","l":"removeCardPositions(int, int, int, PlayersList, Player)","url":"removeCardPositions(int,int,int,model.PlayersList,model.Player)"},{"p":"controller","c":"MapSelectionController","l":"removeContinent(HashMap<Integer, Continents>, HashMap<Integer, ArrayList<Integer>>, HashMap<Integer, Countries>, String)","url":"removeContinent(java.util.HashMap,java.util.HashMap,java.util.HashMap,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"removeContinentTest()"},{"p":"controller","c":"MapSelectionController","l":"removeCountry(HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String)","url":"removeCountry(java.util.HashMap,java.util.HashMap,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"removeCountryTest()"},{"p":"controller","c":"MapSelectionController","l":"removeNeighbour(HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String, String)","url":"removeNeighbour(java.util.HashMap,java.util.HashMap,java.lang.String,java.lang.String)"},{"p":"test","c":"TestMapOperations","l":"removeNeighbourTest()"},{"p":"controller","c":"PlayerSelectionController","l":"removePlayer(ArrayList<String>, String)","url":"removePlayer(java.util.ArrayList,java.lang.String)"},{"p":"test","c":"TestPlayerOperations","l":"removePlayerTest()"},{"p":"view","c":"CommandLine","l":"result"},{"p":"view","c":"CommandLine","l":"sc"},{"p":"view","c":"WelcomeScreen","l":"sc"},{"p":"model","c":"Player","l":"setActionsPerformed(String)","url":"setActionsPerformed(java.lang.String)"},{"p":"model","c":"Player","l":"setAllOutPerformed(boolean)"},{"p":"model","c":"Player","l":"setAttackerCountry(String)","url":"setAttackerCountry(java.lang.String)"},{"p":"model","c":"Player","l":"setAttackerDice(ArrayList<Integer>)","url":"setAttackerDice(java.util.ArrayList)"},{"p":"model","c":"Player","l":"setAttackerName(String)","url":"setAttackerName(java.lang.String)"},{"p":"model","c":"Player","l":"setAvailableReinforceArmies(int)"},{"p":"model","c":"GameMap","l":"setBoundries(HashMap<Integer, ArrayList<Integer>>)","url":"setBoundries(java.util.HashMap)"},{"p":"model","c":"Player","l":"setCardBonusArmy(int)"},{"p":"model","c":"Player","l":"setCardReward(int)"},{"p":"model","c":"Continents","l":"setColour(String)","url":"setColour(java.lang.String)"},{"p":"model","c":"Player","l":"setConqueredCountries(ArrayList<String>)","url":"setConqueredCountries(java.util.ArrayList)"},{"p":"model","c":"Continents","l":"setContinent_Name(String)","url":"setContinent_Name(java.lang.String)"},{"p":"model","c":"Continents","l":"setcontinentControlValue(String)","url":"setcontinentControlValue(java.lang.String)"},{"p":"model","c":"GameMap","l":"setContinents(HashMap<Integer, Continents>)","url":"setContinents(java.util.HashMap)"},{"p":"model","c":"Player","l":"setContinentsCountryList(HashMap<String, ArrayList<String>>)","url":"setContinentsCountryList(java.util.HashMap)"},{"p":"model","c":"GameMap","l":"setCountries(HashMap<Integer, Countries>)","url":"setCountries(java.util.HashMap)"},{"p":"model","c":"Countries","l":"setCountry_Continent_Num(Integer)","url":"setCountry_Continent_Num(java.lang.Integer)"},{"p":"model","c":"Countries","l":"setCountry_Name(String)","url":"setCountry_Name(java.lang.String)"},{"p":"model","c":"Player","l":"setCurrentCardList(ArrayList<String>)","url":"setCurrentCardList(java.util.ArrayList)"},{"p":"model","c":"Player","l":"setCurrentPlayerTurn(String)","url":"setCurrentPlayerTurn(java.lang.String)"},{"p":"model","c":"Player","l":"setDefenderCountry(String)","url":"setDefenderCountry(java.lang.String)"},{"p":"model","c":"Player","l":"setDefenderDice(ArrayList<Integer>)","url":"setDefenderDice(java.util.ArrayList)"},{"p":"model","c":"Player","l":"setDefenderName(String)","url":"setDefenderName(java.lang.String)"},{"p":"model","c":"Player","l":"setDiceRolled(Integer)","url":"setDiceRolled(java.lang.Integer)"},{"p":"model","c":"Player","l":"setGameState(String)","url":"setGameState(java.lang.String)"},{"p":"model","c":"PlayersList","l":"setListOfPlayers(HashMap<String, Player>)","url":"setListOfPlayers(java.util.HashMap)"},{"p":"model","c":"Player","l":"setOwnedArmiesList(ArrayList<Integer>)","url":"setOwnedArmiesList(java.util.ArrayList)"},{"p":"model","c":"Player","l":"setOwnedCountriesArmiesList(HashMap<String, Integer>)","url":"setOwnedCountriesArmiesList(java.util.HashMap)"},{"p":"model","c":"Player","l":"setOwnedCountriesList(ArrayList<String>)","url":"setOwnedCountriesList(java.util.ArrayList)"},{"p":"model","c":"Countries","l":"setOwnerName(String)","url":"setOwnerName(java.lang.String)"},{"p":"model","c":"GameMap","l":"setTotalCardsList(ArrayList<String>)","url":"setTotalCardsList(java.util.ArrayList)"},{"p":"test","c":"TestAttack","l":"setUp()"},{"p":"test","c":"TestFortification","l":"setUp()"},{"p":"test","c":"TestMapOperations","l":"setUp()"},{"p":"test","c":"TestPlayerOperations","l":"setUp()"},{"p":"test","c":"TestReinforcement","l":"setUp()"},{"p":"model","c":"Countries","l":"setX_Coordinate(String)","url":"setX_Coordinate(java.lang.String)"},{"p":"model","c":"Countries","l":"setyCoordinate(String)","url":"setyCoordinate(java.lang.String)"},{"p":"test","c":"SuiteGamePlayOperations","l":"SuiteGamePlayOperations()","url":"%3Cinit%3E()"},{"p":"test","c":"SuiteStartUpOperations","l":"SuiteStartUpOperations()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"TestAttack()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"testAttackPhaseFailure()"},{"p":"test","c":"TestAttack","l":"testAttackPhaseSuccess()"},{"p":"test","c":"TestReinforcement","l":"testCalculateContinentReward()"},{"p":"test","c":"TestReinforcement","l":"testCalculateOwnedCountryReward()"},{"p":"test","c":"TestAttack","l":"testCheckGameEnd()"},{"p":"test","c":"TestAttack","l":"testDefendPhase()"},{"p":"test","c":"TestAttack","l":"testDefendPhaseDiceRoll()"},{"p":"test","c":"TestReinforcement","l":"testExchangeCardNoArmy()"},{"p":"test","c":"TestReinforcement","l":"testExchangeCardSuccessForSameCard()"},{"p":"test","c":"TestReinforcement","l":"testExchangeCardSuccessForUniqeCard()"},{"p":"test","c":"TestFortification","l":"TestFortification()","url":"%3Cinit%3E()"},{"p":"test","c":"TestAttack","l":"testIsValidAttackMove()"},{"p":"test","c":"TestMapOperations","l":"TestMapOperations()","url":"%3Cinit%3E()"},{"p":"test","c":"TestReinforcement","l":"testplaceReinforceArmyFail()"},{"p":"test","c":"TestReinforcement","l":"testplaceReinforceArmySucess()"},{"p":"test","c":"TestFortification","l":"testPlayerDontOwnCountry()"},{"p":"test","c":"TestFortification","l":"testPlayerDontOwnPath()"},{"p":"test","c":"TestPlayerOperations","l":"TestPlayerOperations()","url":"%3Cinit%3E()"},{"p":"test","c":"TestReinforcement","l":"TestReinforcement()","url":"%3Cinit%3E()"},{"p":"test","c":"TestReinforcement","l":"testReinforcementCalculation()"},{"p":"test","c":"TestReinforcement","l":"testReinforcementCalculationMinimumArmy()"},{"p":"test","c":"TestAttack","l":"testValidateDefenderCountry()"},{"p":"test","c":"TestAttack","l":"testValidateNumDiceFail()"},{"p":"test","c":"TestAttack","l":"testValidateNumDiceSuccess()"},{"p":"test","c":"TestAttack","l":"testValidateNumOfArmyMovesFail()"},{"p":"test","c":"TestAttack","l":"testValidateNumOfArmyMovesSuccessOne()"},{"p":"test","c":"TestAttack","l":"testValidateNumOfArmyMovesSuccessTwo()"},{"p":"test","c":"TestFortification","l":"toCountry"},{"p":"controller","c":"PlayerSelectionController","l":"totalArmyCountPlayer(Player)","url":"totalArmyCountPlayer(model.Player)"},{"p":"view","c":"CardExchangeView","l":"update(Observable, Object)","url":"update(model.Observable,java.lang.Object)"},{"p":"view","c":"Observer","l":"update(Observable, Object)","url":"update(model.Observable,java.lang.Object)"},{"p":"view","c":"PhaseView","l":"update(Observable, Object)","url":"update(model.Observable,java.lang.Object)"},{"p":"view","c":"PlayerWorldDominationView","l":"update(Observable, Object)","url":"update(model.Observable,java.lang.Object)"},{"p":"controller","c":"PlayerController","l":"validateDefenderCountry(String, String, HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, ArrayList<String>)","url":"validateDefenderCountry(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.ArrayList)"},{"p":"controller","c":"PlayerController","l":"validateDefenderNumdice(String, Integer, Player)","url":"validateDefenderNumdice(java.lang.String,java.lang.Integer,model.Player)"},{"p":"controller","c":"MapFormatValidation","l":"validateFile(File)","url":"validateFile(java.io.File)"},{"p":"test","c":"TestMapOperations","l":"validateFileFormatTest()"},{"p":"controller","c":"PlayerController","l":"validateNumDice(String, Integer, Player)","url":"validateNumDice(java.lang.String,java.lang.Integer,model.Player)"},{"p":"controller","c":"PlayerController","l":"validateNumOfArmyMoves(Integer, Integer)","url":"validateNumOfArmyMoves(java.lang.Integer,java.lang.Integer)"},{"p":"controller","c":"MapSelectionController","l":"validateScanner"},{"p":"view","c":"WelcomeScreen","l":"welcomeGameDisplay()"},{"p":"view","c":"WelcomeScreen","l":"WelcomeScreen()","url":"%3Cinit%3E()"},{"p":"controller","c":"MapSelectionController","l":"writeGameMapFile(HashMap<Integer, Continents>, HashMap<Integer, Countries>, HashMap<Integer, ArrayList<Integer>>, String)","url":"writeGameMapFile(java.util.HashMap,java.util.HashMap,java.util.HashMap,java.lang.String)"}]